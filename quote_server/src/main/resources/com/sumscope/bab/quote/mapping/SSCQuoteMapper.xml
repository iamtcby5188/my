<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sumscope.bab.quote.mapping.SSCQuoteMapper">
    <resultMap id="BaseResultMap"
               type="com.sumscope.bab.quote.model.model.SSCQuoteModel">
        <result column="ID" property="id" jdbcType="VARCHAR"/>
        <result column="direction" property="direction" typeHandler="com.sumscope.optimus.commons.databasetypehandler.EnumTypeHandler" />
        <result column="bill_type" property="billType" typeHandler="com.sumscope.optimus.commons.databasetypehandler.EnumTypeHandler" />
        <result column="bill_medium" property="billMedium" typeHandler="com.sumscope.optimus.commons.databasetypehandler.EnumTypeHandler" />
        <result column="memo" property="memo" jdbcType="VARCHAR"/>
        <result column="quote_company_id" property="quoteCompanyId" jdbcType="VARCHAR"/>
        <result column="contact_id" property="contactId" jdbcType="VARCHAR"/>
        <result column="operator_id" property="operatorId" jdbcType="VARCHAR"/>
        <result column="create_datetime" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="last_update_datetime" property="lastUpdateDate" jdbcType="TIMESTAMP"/>
        <result column="effective_datetime" property="effectiveDate" jdbcType="TIMESTAMP"/>
        <result column="expired_datetime" property="expiredDate" jdbcType="TIMESTAMP"/>
        <result column="quote_status" property="quoteStatus" typeHandler="com.sumscope.optimus.commons.databasetypehandler.EnumTypeHandler"/>

        <result column="minor_flag" property="minor" jdbcType="BOOLEAN"/>
        <result column="gg_price" property="ggPrice" jdbcType="DECIMAL"/>
        <result column="cs_price" property="csPrice" jdbcType="DECIMAL"/>
        <result column="ns_price" property="nsPrice" jdbcType="DECIMAL"/>
        <result column="nx_price" property="nxPrice" jdbcType="DECIMAL"/>
        <result column="nh_price" property="nhPrice" jdbcType="DECIMAL"/>
        <result column="cz_price" property="czPrice" jdbcType="DECIMAL"/>
        <result column="wz_price" property="wzPrice" jdbcType="DECIMAL"/>
        <result column="cw_price" property="cwPrice" jdbcType="DECIMAL"/>


        <result column="ybh_price" property="ybhPrice" jdbcType="DECIMAL"/>
        <result column="wbh_price" property="wbhPrice" jdbcType="DECIMAL"/>
        <result column="province_code" property="provinceCode" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="retrieveCompanyIDs" resultType="java.lang.String">
        SELECT DISTINCT quote_company_id FROM ssc_quote WHERE quote_company_id IS NOT NULL
    </select>

    <select id="retrieveByCondition" resultMap="BaseResultMap"
            parameterType="com.sumscope.bab.quote.model.model.QueryQuotesParameterModel">
        SELECT * FROM ssc_quote
        <if test="memo != null and memo != '' or companyId != null">
            LEFT JOIN bab_quote_addtional_info ON bab_quote_addtional_info.quote_id = ssc_quote.ID
        </if>
        WHERE
        <if test="memo != null and memo != ''">
            (memo like CONCAT('%','${memo}','%' ) OR bab_quote_addtional_info.company_name like CONCAT('%','${memo}','%' )) AND
        </if>
        <if test="companyId != null" >
            (quote_company_id=#{companyId} OR bab_quote_addtional_info.company_name = #{companyName}) AND </if>
        <if test="minor != null" > minor_flag=#{minor} AND </if>
        <if test="effectiveQuotesDate != null" >
            <![CDATA[
             effective_datetime <= #{effectiveQuotesDate} AND expired_datetime > #{effectiveQuotesDate}
        ]]> AND </if>
        <if test="provinceCodes != null">province_code IN
            <foreach item="item" index="index" collection="provinceCodes"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
            AND
        </if>
        <if test="expiredQuotesDate != null" > <![CDATA[ expired_datetime <= #{expiredQuotesDate} ]]>  AND </if>
        <include refid="queryBase"></include>
        <include refid="orderAndLimit"></include>
    </select>

    <select id="retrieveByIDs" resultMap="BaseResultMap"
            parameterType="java.util.List">
        SELECT * FROM ssc_quote
        <include refid="IdIn"></include>
    </select>

    <insert id="insert" parameterType="java.util.List">
        INSERT INTO <include refid="sscBaseQuote"></include>
        VALUES
        <foreach item="item" index="index" collection="list"
                 open="" separator="," close="">
            (
            <include refid="ItemValue"></include>
            #{item.minor}, #{item.ggPrice}, #{item.csPrice}, #{item.nsPrice},
            #{item.nxPrice}, #{item.nhPrice}, #{item.czPrice}, #{item.wzPrice}, #{item.cwPrice},
            #{item.ybhPrice}, #{item.wbhPrice}, #{item.provinceCode}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="com.sumscope.bab.quote.model.model.SSCQuoteModel">
        UPDATE ssc_quote SET
        <include refid="updateBaseQuote"></include>
        minor_flag=#{minor},
        gg_price=#{ggPrice},
        cs_price=#{csPrice},
        ns_price=#{nsPrice},
        nx_price=#{nxPrice},
        nh_price=#{nhPrice},
        cz_price=#{czPrice},
        wz_price=#{wzPrice},
        cw_price=#{cwPrice},
        ybh_price=#{ybhPrice},
        wbh_price=#{wbhPrice},
        province_code=#{provinceCode}
        WHERE ID=#{id}
    </update>

    <update id="updateStatus" parameterType="java.util.Map">
        UPDATE ssc_quote SET quote_status=#{status}, last_update_datetime=#{updateTime}
        <include refid="IdIn"></include>
    </update>

    <update id="flush">
        UPDATE ssc_quote SET ID=ID WHERE ID=''
    </update>

    <insert id="insertHistory" parameterType="com.sumscope.bab.quote.model.model.SSCQuoteModel">
        INSERT INTO <include refid="sscBaseQuote"></include>
        VALUES (
        #{id}, #{direction}, #{billType}, #{billMedium}, #{memo}, #{quoteCompanyId},
        #{contactId}, #{operatorId}, #{createDate}, #{lastUpdateDate}, #{effectiveDate},
        #{expiredDate}, #{quoteStatus},
        #{minor}, #{ggPrice}, #{csPrice}, #{nsPrice},
        #{nxPrice}, #{nhPrice}, #{czPrice}, #{wzPrice}, #{cwPrice},
        #{ybhPrice}, #{wbhPrice}, #{provinceCode}
        )
    </insert>

    <delete id="deleteByIDs" parameterType="java.util.List">
        DELETE FROM ssc_quote
        <include refid="IdIn"></include>
    </delete>

    <delete id="deleteHistoryByID" parameterType="java.lang.String">
        DELETE FROM ssc_quote
        WHERE ID=#{id}
    </delete>

    <sql id="sscBaseQuote">
        ssc_quote (<include refid="baseQuote"/>, minor_flag, gg_price, cs_price, ns_price, nx_price,
        nh_price, cz_price, wz_price, cw_price, ybh_price, wbh_price,province_code)
    </sql>

    <!--************************************************************************以下为SSR,SSC,NPC共享的代码段****************************************************************-->
    <!--*********************************************************************************************************************************************************************-->
    <!--*********************************************************************************************************************************************************************-->
    <sql id="baseQuote">
        ID,direction,bill_type,bill_medium,memo,quote_company_id,contact_id,operator_id,create_datetime,last_update_datetime,
        effective_datetime,expired_datetime,quote_status
    </sql>

    <sql id="queryBase">
        <if test="billType != null" > bill_type=#{billType} AND</if>
        <if test="direction != null" > direction=#{direction} AND</if>
        <if test="billMedium != null" > bill_medium=#{billMedium} AND </if>
        <if test="userId != null" >(contact_id=#{userId} OR operator_id=#{userId}) AND </if>
        <if test="createTimeBegin != null" > <![CDATA[ create_datetime >= #{createTimeBegin} ]]> AND</if>
        <if test="createTimeEnd != null" > <![CDATA[ create_datetime <= #{createTimeEnd} ]]> AND</if>
        <if test="lastUpdateTimeBegin != null" > <![CDATA[ last_update_datetime >= #{lastUpdateTimeBegin} ]]> AND</if>
        <if test="lastUpdateTimeEnd != null" > <![CDATA[ last_update_datetime <= #{lastUpdateTimeEnd} ]]> AND</if>
        <if test="quoteStatusList != null" > quote_status IN
            <foreach item="item" index="index" collection="quoteStatusList"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </sql>

    <sql id="orderAndLimit">
        <if test="orderByPriceType != null and oderSeq != null" >
            <if test="oderSeq == 'DESC'">
                ORDER BY ${orderByPriceType} DESC
            </if>
            <if test="oderSeq == 'ASC'">
                ORDER BY ${orderByPriceType} ASC
            </if>
        </if>
        <if test="paging==true and pageSize != null and pageNumber != null">
            limit #{startNum}, #{pageSize}
        </if>
    </sql>

    <sql id="IdIn" >
        WHERE ID IN
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </sql>

    <sql id="updateBaseQuote">
        direction=#{direction},
        bill_type=#{billType},
        bill_medium=#{billMedium},
        memo=#{memo},
        quote_company_id=#{quoteCompanyId},
        contact_id=#{contactId},
        operator_id=#{operatorId},
        last_update_datetime=#{lastUpdateDate},
        <!-- 只有未发布的状态才能更改生效日和到期日，其他则不更改 -->
        <choose>
            <when test="quoteStatus != null and quoteStatus.getDbCode() == 'DFT'">
                effective_datetime=#{effectiveDate},
                expired_datetime = #{expiredDate},
            </when>
        </choose>
        quote_status=#{quoteStatus},
    </sql>

    <sql id="ItemValue" >
        #{item.id}, #{item.direction}, #{item.billType}, #{item.billMedium}, #{item.memo}, #{item.quoteCompanyId},
        #{item.contactId}, #{item.operatorId}, #{item.createDate}, #{item.lastUpdateDate}, #{item.effectiveDate},
        #{item.expiredDate}, #{item.quoteStatus},
    </sql>
</mapper>